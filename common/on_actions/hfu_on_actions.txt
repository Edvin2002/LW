on_actions = {

	on_monthly_SWE={
		effect={
			update_pacific_war=yes
			}}
	on_monthly_ITA={
		effect={
			GER={add_equipment_to_stockpile={type = fighter_equipment_alt amount = -5000 }}
			if={limit={has_country_flag=ll_enabled}
				set_temp_variable={airxp=num_equipment@fighter_equipment}
				add_to_temp_variable={airxp=num_equipment@CAS_equipment}
				add_to_temp_variable={airxp=num_equipment@CAS_equipment}
				add_to_temp_variable={airxp=num_equipment@nav_bomber_equipment}
				add_to_temp_variable={airxp=num_equipment@tac_bomber_equipment}
				add_to_temp_variable={airxp=num_equipment@heavy_fighter_equipment}
				multiply_temp_variable = {airxp=0.1}
				air_experience = airxp
				send_equipment = { equipment = fighter_equipment amount = 5000 target = GER }
				send_equipment = { equipment = CAS_equipment amount = 5000 target = GER }
				send_equipment = { equipment = nav_bomber_equipment amount = 5000 target = GER }
				send_equipment = { equipment = tac_bomber_equipment amount = 5000 target = GER }
				send_equipment = { equipment = heavy_fighter_equipment amount = 5000 target = GER }


			}
		}
	}
	on_monthly={
		effect={

			if={limit = {is_in_faction_with = GER}
				JAP={
					share_intel_with_allies=yes

				}
				MAN={if={limit={country_exists=MAN}
						share_intel_with_allies=yes
						}}
			}
			if={limit = {is_in_faction_with = ENG}
				SOV={
					share_intel_with_allies=yes
				}
			}
			}}

	on_startup={
		effect{
			SOV={every_state = {
					limit= {is_core_of=SOV}
					add_state_modifier={modifier={local_supplies = 1}}
				}
			}
			GER = {
				create_arrays_pacific=yes
				set_temp_variable={core_pop = 0}
				for_each_scope_loop ={
					array=core_states
					add_to_temp_variable ={PREV.core_pop=state_population_k}
				}
				multiply_temp_variable= {core_pop=0.001}
				add_to_temp_variable={core_pop = 20}
				set_variable = {pow_adjustment = 100}
				divide_variable = {pow_adjustment=core_pop}
			}
			every_country={
				limit={	OR = {
						tag = SOV
						tag = FRA
						tag = JAP
						tag = RAJ
						tag = AST
						tag = NZL
						tag = MAN
						tag = BUL
						tag = ROM
						tag = HUN
						tag = SPR
						tag = ITA
						tag = ENG
						tag = IRE
						tag = SAF
						tag = FIN
						tag = USA
						tag = CAN
						}}
				set_temp_variable={core_pop = 0}
				for_each_scope_loop ={
					array=core_states
					add_to_temp_variable ={PREV.core_pop=state_population_k}
				}
				multiply_temp_variable= {core_pop=0.001}
				add_to_temp_variable={core_pop = 20}
				if={limit={tag=RAJ} add_to_temp_variable={core_pop = -300}}
				set_variable = {pow_adjustment = 100}
				divide_variable = {pow_adjustment=core_pop}
				divide_variable = {pow_adjustment=GER.pow_adjustment}
				set_variable={pow_base_cost=50}
				divide_variable= {pow_base_cost=pow_adjustment}
				if= {limit={check_variable= {pow_adjustment<1}}
				set_variable = {pow_adjustment = 1}
				set_variable={pow_base_cost=50}
				}
				
			}

			GER = {
				set_variable = {pow_adjustment = 1}
				set_variable={pow_base_cost=50}
			}
			every_country={
				limit={	has_country_flag=fuel_system_enabled}
				add_to_array={GLOBAL.fuel_system_manager=THIS.id}
			}
		}
	}
	on_daily_SWE={
		effect={



			for_each_scope_loop={
				array=GLOBAL.fuel_system_manager
				##
				set_variable={GLOBAL.controllerscope=THIS.id}
				##
				for_each_scope_loop={
					array = THIS.faction_members_array
					##
					set_variable={GLOBAL.currentscope=THIS.id}
					##
					if={
						limit={check_variable={send_fuel_enabled >1}}
						set_variable={fuelbedarf=min_fuel}
						subtract_from_variable={fuelbedarf=fuel_ratio}
						set_variable={fuelbedarfanteil=fuelbedarf}
						multiply_variable={fuelbedarf=max_fuel_k}
						set_variable={fuelbedarfvorzeichen=fuelbedarf}
						multiply_variable={fuelbedarfvorzeichen=-1}
						##
						set_variable={fuelbedarf_k=fuelbedarf}
						set_variable={fuelbedarfvorzeichen_k=fuelbedarfvorzeichen}
						##
						multiply_variable={fuelbedarfvorzeichen=1000}
						multiply_variable={fuelbedarf=1000}

						#log="[PREV.GetName]"
						set_variable={PREV.fuelbedarf=PREV.min_fuel}
						subtract_from_variable={PREV.fuelbedarf=PREV.fuel_ratio}
						set_variable={PREV.fuelbedarfanteil=PREV.fuelbedarf}
						multiply_variable={PREV.fuelbedarf=PREV.max_fuel_k}
						set_variable={PREV.fuelbedarfvorzeichen=PREV.fuelbedarf}
						multiply_variable={PREV.fuelbedarfvorzeichen=-1}
						multiply_variable={PREV.fuelbedarfvorzeichen=1000}
						multiply_variable={PREV.fuelbedarf=1000}
						set_variable={PREV.free_stockpile=PREV.max_fuel_k}
						subtract_from_variable={PREV.free_stockpile=PREV.fuel_k}
						multiply_variable={PREV.free_stockpile=1000}
						set_variable={PREV.free_stockpilenegativ=PREV.free_stockpile}
						multiply_variable={PREV.free_stockpilenegativ=-1}

						set_variable={countryfuelplus5=fuel_ratio}
						add_to_variable={countryfuelplus5=0.05}
						if={limit={ #fuel von prev zu this
								check_variable={PREV.fuelbedarf <0} #hat prev mehr fuel als minimum?
								check_variable={min_fuel > countryfuelplus5} # braucht this Ã¼berhaupt fuel?
							}
							if={
								limit={
									check_variable={fuelbedarf >0}
									check_variable={PREV.fuelbedarfvorzeichen >fuelbedarf}
								}
								set_temp_variable={PREV.mastergain=fuelbedarfvorzeichen}
								set_temp_variable={subjectgain=fuelbedarf}
								PREV={
									add_fuel=mastergain
								}
								add_fuel=subjectgain
								#log="CASE 1 [GLOBAL.GetDateText] [PREV.GetName] [?test2] to [THIS.GetName]"
							}
							else={

								set_temp_variable={PREV.mastergain=fuelbedarfvorzeichen}
								set_temp_variable={subjectgain=fuelbedarf}
								PREV={
									add_fuel=mastergain
								}
								add_fuel=subjectgain
								set_temp_variable={PREV.test2=PREV.fuelbedarfvorzeichen}
								#log="CASE 2 [GLOBAL.GetDateText] [PREV.GetName] [?test2] to [THIS.GetName]"
							}
						}
						else_if={ #fuel von this zu prev
							limit={
								check_variable={fuelbedarf <0} #hat this mehr fuel als minimum?
								check_variable={PREV.fuel_ratio <0.95} # hat PREV full_stockpile?
							}
							if={
								limit={
									check_variable={fuelbedarfvorzeichen <PREV.free_stockpile} # ist this free fuel kleiner als prev free stockpile?
								}

								set_temp_variable={PREV.mastergain=fuelbedarfvorzeichen}
								set_temp_variable={subjectgain=fuelbedarf}
								PREV={
									add_fuel=mastergain
								}
								add_fuel=subjectgain

								#log="CASE 3 [GLOBAL.GetDateText] [PREV.GetName] [?test2] to[THIS.GetName]"
							}
							else_if={limit={check_variable={PREV.free_stockpile>1000}}#no need to transfer fuel <1k

								set_temp_variable={PREV.mastergain=PREV.free_stockpile}
								set_temp_variable={subjectgain=PREV.free_stockpilenegativ}
								PREV={
									add_fuel=mastergain
								}
								add_fuel=subjectgain

								#log="CASE 4 [GLOBAL.GetDateText] [PREV.GetName] [?test2] to [THIS.GetName]"
							}
						}
						else_if={#this fills the subject fuel storage to 95% when major has full fuel
							limit={
								check_variable={fuel_ratio <0.95} #hat this free stockpile
								check_variable={PREV.fuel_ratio >0.95} # hat PREV full_stockpile?
							}
							set_variable={free_stockpile=max_fuel_k}
							subtract_from_variable={free_stockpile=fuel_k}
							multiply_variable={free_stockpile=1000}
							set_variable={free_stockpilenegativ=free_stockpile}
							multiply_variable={free_stockpilenegativ=-1}
							set_variable={master_spare_fuel=PREV.max_fuel_k}
							multiply_variable={master_spare_fuel=0.03}
							multiply_variable={master_spare_fuel=1000}
							set_variable={master_spare_fuelnegativ=master_spare_fuel}
							multiply_variable={master_spare_fuelnegativ=-1}
							if={limit={check_variable={free_stockpile<mastersparefuel}}
								set_temp_variable={PREV.mastergain=free_stockpilenegativ}
								set_temp_variable={subjectgain=free_stockpile}}
							else={
								set_temp_variable={PREV.mastergain=master_spare_fuelnegativ}
								set_temp_variable={subjectgain=master_spare_fuel}
							}
							PREV={
								add_fuel=mastergain
							}
							add_fuel=subjectgain
							#log="CASE 5 [GLOBAL.GetDateText] [?mastergain] FROM [PREV.GetName] [?subjectgain] to [THIS.GetName]"


						}
						#else={log="NOTHING [GLOBAL.GetDateText] [THIS.GetName]"}
					}
				}
			}
			for_each_scope_loop={
				array=GLOBAL.fuel_countries
				set_temp_variable={currentfuel=fuel_ratio}
				subtract_from_temp_variable={currentfuel=1}
				multiply_temp_variable={currentfuel = 88}
				set_variable={fuel_bar_fuel=currentfuel}
			}

		}
	}
	on_state_control_changed = {
		effect = {
			if = {
				limit = {
					FROM = {
						OR = {
							tag = JAP
							tag = MAN
						}
					}
					FROM.FROM = {
						OWNER={tag=INS}
					}
				}
				if = {
				limit = {
					INS={
						has_resources_amount = {
							resource = rubber
							amount > 0
						}
					}
				}
				INS={
					country_event = {
						id = japan.444
						days=1
					}
				}
				
				}
				}
		}
	}
	on_state_control_changed = {
		effect = {
			if = {
				limit = {

					FROM.FROM = {


						OR = {
							state = 219# moscow
							state = 195 #Leningrad
							state = 217 #Stalingrad
							state = 202 #Kiev
							state = 206 #Minsk
						}


					}
				}


				GER = {clear_variable=barb_factory_output
					if={limit={NOT={SOV={controls_state = 202}}}
						add_to_variable={barb_factory_output=0.025}
					}

					if={limit={NOT={SOV={controls_state = 206}}}
						add_to_variable={barb_factory_output=0.025}
					}

					if={limit={NOT={SOV={controls_state = 195}}}
						add_to_variable={barb_factory_output=0.05}
					}

					if={limit={NOT={SOV={controls_state = 217}}}
						add_to_variable={barb_factory_output=0.05}
					}

					if={limit={NOT={SOV={controls_state = 219}}}
						add_to_variable={barb_factory_output=0.10}
					}

				}
				}}}
	on_state_control_changed = {
		effect = {
			if = {
				limit = {
					ROOT = {
						OR = {
							tag = JAP
							tag = MAN
						}
					}
					FROM.FROM = {
						AND = {
							NOT = { has_state_flag = rubber_state_transfered }
							OR = {
								state = 623
								state = 327
								state = 625
								state = 627
								state = 333
								state = 334
								state = 672
								state = 733
								state = 422
								state = 335
								state = 667
								state = 721
								state = 673
								state = 668
								state = 669
								state = 523
								state = 737
								state = 634
								state = 635
								state = 626
								state = 628
								state = 336
								state = 624
								state = 738
							}
							USA = {
								divisions_in_state = {
									type = infantry
									size < 1
									state = FROM.FROM
								}
							}
							NZL = {
								divisions_in_state = {
									type = infantry
									size < 1
									state = FROM.FROM
								}
							}
							AST = {
								divisions_in_state = {
									type = infantry
									size < 1
									state = FROM.FROM
								}
							}
							RAJ = {
								divisions_in_state = {
									type = infantry
									size < 1
									state = FROM.FROM
								}
							}
							SAF = {
								divisions_in_state = {
									type = infantry
									size < 1
									state = FROM.FROM
								}
							}
							CAN = {
								divisions_in_state = {
									type = infantry
									size < 1
									state = FROM.FROM
								}
							}
							ENG = {
								divisions_in_state = {
									type = infantry
									size < 1
									state = FROM.FROM
								}
							}
							FRA = {
								divisions_in_state = {
									type = infantry
									size < 1
									state = FROM.FROM
								}
							}
						}
					}
				}
				FROM.FROM = {
					set_state_flag = rubber_state_transfered
				}
				JAP = { set_state_controller = FROM.FROM }
			}
		}
	}
	on_capitulation = {
		effect = {

			if = {
				limit = {
					OR={
						tag=BEL
						tag=HOL
						tag=DEN
						tag=POL
						tag=NOR
						tag=LUX
						}}
				country_event={id=surrender.1 days=2}

				if={limit={tag=POL}GER={country_event={id=germany.14 days=3}}}
			}
			else_if = {
				limit = {
					OR={
						tag=AST
						tag=RAJ
						tag=NZL
						tag=FRA
						tag=SAF
						}}
				add_offsite_building = { type = arms_factory level = 5 }
				add_offsite_building = { type = industrial_complex level = 5 }
				add_offsite_building = { type = dockyard level = 1 }

			}
			else_if = {
				limit = {
					tag=ENG
				}
				add_offsite_building = { type = arms_factory level = 30 }
				add_offsite_building = { type = industrial_complex level = 20 }
				add_offsite_building = { type = dockyard level = 10 }

			}
			
			if = {limit = {tag=ger}
			set_variable={Global.super_event=2}
			show_super_event=yes}
			
			if = {limit = {tag=jap}
			set_variable={Global.super_event=7}
			show_super_event=yes}
			
			if = {limit = {tag=eng}
			set_variable={Global.super_event=5}
			show_super_event=yes}
		}
	}

	on_declare_war={
		effect={
			if = {
				limit = {
					ROOT = {
						TAG = GER
					}
					NOT = {
						has_global_flag = GER_has_started_war
					}
				}
				#FRA={activate_mission=FRA_Resistance}
				set_global_flag = GER_has_started_war
			}
			if = {
				limit = {
					FROM = {
						OR={
							tag=BEL
							tag=DEN
							tag=POL
							tag=NOR
							tag=LUX
							tag=GRE
							tag=YUG

						}
					}
				}
				ENG={add_to_faction=FROM}
			}
			else_if = {
				limit = {
					FROM = {
						tag=HOL

					}
				}
				ENG={add_to_faction=FROM}
				GER={
					declare_war_on = {
						target = INS
						type = annex_everything
					}
				}
			}

		}
	}

	on_startup = {
		effect = {
			GER = {
				every_country = {
					limit = {
						NOT={tag=GER}
						OR={is_in_faction_with = GER
							AND={GER={tag=GER}tag=SPR}}
						NOT = { is_in_array = { GER.faction_members_array = THIS.id } }
					}
					add_to_array = { GER.faction_members_array = THIS.id }
				}
				if = {
					limit = {
						any_of_scopes={array=GER.faction_members_array NOT={is_in_array={GLOBAL.fuel_countries=THIS.id}}}
					}
					for_each_scope_loop={
						array=GER.faction_members_array
						if={limit={NOT={is_in_array={GLOBAL.fuel_countries=THIS.id}}}
							add_to_array={GLOBAL.fuel_countries=THIS.id}}
					}
				}
				set_variable={send_fuel_enabled=2}
				for_each_scope_loop={
					array=GER.faction_members_array
					set_variable={send_fuel_enabled=2}
				}
			}
			ENG = {
				every_country = {
					limit = {
						NOT={tag=ENG}
						OR={is_in_faction_with = ENG
							AND={ENG={tag=GER}tag=SPR}}
						NOT = { is_in_array = { ENG.faction_members_array = THIS.id } }
					}
					add_to_array = { ENG.faction_members_array = THIS.id }
				}
				if = {
					limit = {
						any_of_scopes={array=ENG.faction_members_array NOT={is_in_array={GLOBAL.fuel_countries=THIS.id}}}
					}
					for_each_scope_loop={
						array=ENG.faction_members_array
						if={limit={NOT={is_in_array={GLOBAL.fuel_countries=THIS.id}}}
							add_to_array={GLOBAL.fuel_countries=THIS.id}}
					}
				}
				set_variable={send_fuel_enabled=2}
				for_each_scope_loop={
					array=ENG.faction_members_array
					set_variable={send_fuel_enabled=2}
				}
			}
		}
	}
}
